@model ChandrimERP.Models.Ledger

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="card-style">
            <div class="card-style-header">
                <h4>Create New Ledger</h4>
            </div>
            <div class="card-style-body">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="col-md-12 inputGroupContainer">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                                <div class="d-flex">
                                    <span class="input-group-addon cuspadding">
                                        <i class="glyphicon glyphicon-user"></i>
                                    </span>
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Your Name Here" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label" })
                                <div class="d-flex">
                                    <span class="input-group-addon cuspadding">
                                        <i class="fa fa-building"></i>
                                    </span>
                                    @Html.DropDownList("CompanyId", null, "Select Your Company", htmlAttributes: new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">

                            <div class="col-md-6">
                                @Html.LabelFor(model => model.LedgerCategory, htmlAttributes: new { @class = "control-label" })
                                <div class="d-flex">
                                    <span class="input-group-addon cuspadding">
                                        <i class="fa fa-book"></i>
                                    </span>
                                    @Html.DropDownList("LedgerCategoryId", null, "Select Your Ledger Category", htmlAttributes: new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.LedgerCategoryId, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.ParentLedgerId, htmlAttributes: new { @class = "control-label" })
                                <div class="d-flex">
                                    <span class="input-group-addon cuspadding">
                                        <i class="fa fa-book"></i>
                                    </span>
                                    @Html.DropDownList("ParentLedgerId", null, "Select Your Parent Ledger Category", htmlAttributes: new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.ParentLedgerId, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.OpeningBalance, htmlAttributes: new { @class = "control-label" })
                                <div class="d-flex">
                                    <span class="input-group-addon cuspadding">
                                        <i class="fa fa-money"></i>
                                    </span>
                                    @Html.EditorFor(model => model.OpeningBalance, new { htmlAttributes = new { @class = "form-control", @placeholder = "Opening Balance" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.OpeningBalance, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-6">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.EffectInventory, new { @class = "checkboxstyle" })
                                    @Html.LabelFor(model => model.EffectInventory, htmlAttributes: new { @class = "control-label" })
                                    @Html.ValidationMessageFor(model => model.EffectInventory, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.EffectPayrool)
                                    @Html.LabelFor(model => model.EffectPayrool, htmlAttributes: new { @class = "control-label" })
                                    @Html.ValidationMessageFor(model => model.EffectPayrool, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
                                <div class="d-flex">
                                    <span class="input-group-addon cuspadding">
                                        <i class="fa fa-globe"></i>
                                    </span>
                                    @Html.DropDownListFor(m => m.Country, new SelectList(""), "Country", new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
                                <div class="d-flex">
                                    <span class="input-group-addon cuspadding">
                                        <i class="fa fa-globe"></i>
                                    </span>
                                    @Html.DropDownListFor(m => m.State, new SelectList(""), "State", new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                                <div class="d-flex">
                                    <span class="input-group-addon cuspadding">
                                        <i class="fa fa-globe"></i>
                                    </span>
                                    @Html.DropDownListFor(m => m.City, new SelectList(""), "City", new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                                <div class="d-flex">
                                    <span class="input-group-addon cuspadding">
                                        <i class="fa fa-map-marker"></i>
                                    </span>
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Address" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label" })
                                <div class="d-flex">
                                    <span class="input-group-addon cuspadding">
                                        <i class="glyphicon glyphicon-phone"></i>
                                    </span>
                                    @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Phone No." } })
                                </div>
                                @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                <div class="d-flex">
                                    <span class="input-group-addon cuspadding">
                                        <i class="fa fa-envelope"></i>
                                    </span>
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Email Adress" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>

                        </div>



                    </div>
                </div>
            </div>
            <div class="card-style-footer">
                <div class="btn-group left">
                    <button type="button" class="btn btn-default glyphicon glyphicon-list-alt" id="btnShowModal"> Tree</button>
                    <button type="button" class="btn btn-outline-primary">Report</button>
                </div>
                <div class="btn-group right">                   
                    <button type="button" class="btn btn-outline-primary">Back to List</button>
                    <input type="submit" value="Create" class="btn btn-outline-primary" />
                </div>
            </div>
        </div>
    }
</div>

<div class="modal fade" tabindex="-1" id="charttree"
     data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="card-style-header">
                <button type="button" class="close" data-dismiss="modal">
                    ×
                </button>
                <h4 class="modal-title">Chart Of Account</h4>
            </div>
            <div class="card-style-body">
                <div class="col-md-6">
                    <input type="text" id="tree_q" value="" class="input" style="margin:0em auto 1em auto; display:block; padding:4px; border-radius:4px; border:1px solid silver;">
                    <div id="treebody">
                    </div>

                </div>
                <div class="clearfix"></div>
            </div>
            <div class="card-style-footer">
                <div class="btn-group right">
                    <button type="button" id="btnHideModal" class="btn btn-outline-primary button button4"> Close </button>
                </div>
                <div class="clearfix"></div>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script>
        $(document).ready(function () {
            accountsCreateLedger();
        });
    </script>
}
