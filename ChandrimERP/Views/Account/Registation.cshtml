@model ChandrimERP.Models.RegisterViewModel

@{
    ViewBag.Title = "Registation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="login-box">
    <div class="login-logo">
        <a href=""><b>Chandrim</b>ERP</a>
    </div>
    <!-- /.login-logo -->
    <div class="login-box-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @if (ViewBag.Message != "")
                {
                    <div class="text-danger">@ViewBag.Message</div>
                }
                <div class="form-group has-feedback">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" ,@placeholder = "Email Address" } })
                        <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group has-feedback">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First Name" } })
                        <span class="glyphicon glyphicon-user form-control-feedback"></span>
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group has-feedback">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last Name" } })
                        <span class="glyphicon glyphicon-user form-control-feedback"></span>
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group has-feedback">
                    <div class="col-md-12">
                        @Html.EnumDropDownListFor(model => model.Genders, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Genders, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group has-feedback">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password" } })
                        <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                         @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group has-feedback">                 
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirm Password" } })
                        <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                         @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group has-feedback">
                    <div class="col-md-offset-4 col-md-3">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
        <div>
            @Html.ActionLink("Go Login", "Login") | @Html.ActionLink("Re Send Verification Mail", "Emailverify")
        </div>
    </div>
    <!-- /.login-box-body -->
</div>


