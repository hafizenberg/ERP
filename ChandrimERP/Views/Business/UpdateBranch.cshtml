@model ChandrimERP.Models.Branch
@{
    ViewBag.Title = "AddNewBranch";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    ViewBag.Title = "UpdateBranch";
}
<style>
    .comname {
        text-align: center;
        font-size: 20px;
        color: navy;
    }
</style>
<div class="content-body">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal cusform">
            <h4 class="text-center">Update Branch</h4>
            <hr style="border-top: 1px solid black;" />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-md-12 inputGroupContainer">
                    @Html.HiddenFor(model => model.CompanyId, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12 inputGroupContainer">
                    @Html.HiddenFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    <div class="comname">
                        @ViewBag.CompanyName
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12 inputGroupContainer">
                    @Html.LabelFor(model => model.BranchName, htmlAttributes: new { @class = "control-label" })
                    <div class="d-flex">
                        <span class="input-group-addon cuspadding">
                            <i class="fa fa-home"></i>
                        </span>
                        @Html.EditorFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12 inputGroupContainer">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                    <div class="d-flex">
                        <span class="input-group-addon cuspadding">
                            <i class="fa fa-map-marker"></i>
                        </span>
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Address" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Status)
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-12 text-right">
                    <button type="button" class="btn btn-default ">@Html.ActionLink("Back To List", "BranchList")</button>
                    <input type="submit" value="Update" class="btn btn-default"/>
                </div>
            </div>
            <div class="clearfix"></div>
        </div>
    }
    <div class="clearfix"></div>
</div>

