

@model ChandrimERP.Models.PurchaseOrderViewModel
@{
    ViewBag.Title = "";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="card-style">
        <div class="card-style-header">
            Goods Return Note
        </div>
        <div class="card-style-body">
            <div class="row">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @Value = ViewBag.FirstName, @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control ", @Value = @ViewBag.UserName, @readonly = "readonly", @id = "username" } })
                                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class = "control-label col-md-4">Date</label>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control", @id = "orderdate" } })
                                @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">

                            <div class="col-md-8">
                                @Html.HiddenFor(model => model.InvoiceNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.InvoiceNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SupplierID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div style="display:flex;justify-content:space-between;">
                                    @Html.DropDownList("SupplierID", null, htmlAttributes: new { @class = "form-control customerList", @id = "supplier" })
                                </div>
                                @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LedgerId, "LedgerId", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownList("LedgerId", null, htmlAttributes: new { @class = "form-control LedgerList" })
                                @Html.ValidationMessageFor(model => model.LedgerId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BranchId, "BranchId", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownList("BranchId", null, htmlAttributes: new { @class = "form-control BranchList", @id = "branch" })
                                @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.WarehouseId, "WarehouseId", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownList("WarehouseId", null, htmlAttributes: new { @class = "form-control WarehouseList", @id = "warehouse" })
                                @Html.ValidationMessageFor(model => model.WarehouseId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.LastOrderDate, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.LastOrderDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.LastOrderDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.PONumber, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.PONumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.PONumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DeliveryDate, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.DeliveryDate, new { htmlAttributes = new { @class = "form-control", @id = "delivarydate" } })
                                @Html.ValidationMessageFor(model => model.DeliveryDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br>
            <div class="table ">
                <table id="tablecus" class="table">
                    <tbody>
                        <tr>
                            <td>@Html.DropDownList("productlist", ViewBag.ProductList as SelectList, "Select Product", htmlAttributes: new { @class = "form-control productlist", @id = "barcode" })</td>
                            <td>@Html.EditorFor(model => model.ScanProductName, new { htmlAttributes = new { @id = "productName", @placeholder = " Product Name ", @class = "form-control ", @readonly = "readonly" } })</td>
                            <td>@Html.EditorFor(model => model.SetRate, new { htmlAttributes = new { @id = "rate", @placeholder = " Rate ", @class = "form-control qty1", @readonly = "readonly" } })</td>
                            <td>@Html.EditorFor(model => model.SetQuantity, new { htmlAttributes = new { @id = "quantity", @placeholder = " Quantity ", @class = "form-control ", } })</td>
                            <td>@Html.EditorFor(model => model.SetCost, new { htmlAttributes = new { @id = "cost", @placeholder = "Cost Rate ", @class = "form-control qty1" } })</td>
                            <td>@Html.EditorFor(model => model.SetCost, new { htmlAttributes = new { @id = "ecost", @placeholder = "Editional Cost Rate ", @class = "form-control qty1" } })</td>
                            <td><input type="text" name="Id" id="discount" class="form-control" placeholder="Disc"></td>
                            <td>@Html.EditorFor(model => model.SetBonusQuantity, new { htmlAttributes = new { @id = "bonusQnt", @placeholder = " Bonus /Free ", @class = "form-control ", } })</td>
                            <td><input type="text" name="Id" id="batch" class="form-control" placeholder="Batch / Serial No"></td>
                            <td><input type="hidden" id="pCode" name="Id"></td>
                            <td><input type="hidden" id="pDesc" name="Id"></td>
                            <td><input type="hidden" id="pUnit" name="Id"></td>
                            <td><input type="hidden" id="pVAT" name="Id"></td>
                            <td><button id="addToList" type="button" class="btn btn-basic">Add</button></td>
                        </tr>
                    </tbody>
                </table>
                <table id="detailsTable" class="table table-striped">
                    <thead>
                        <tr>
                            <th class="center">Product Code</th>
                            <th class="center">Name of Item</th>
                            <th class="center">Description</th>
                            <th class="center">Qty</th>
                            <th class="center">Rate</th>
                            <th class="center">Per</th>
                            <th class="center">Total Amt</th>
                            <th class="center">Disc</th>
                            <th class="center">Net Total</th>
                            <th class="center">Batch</th>
                            <th class="center">Bonus Qty</th>
                            <th class="center">VAT</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group row">
                        <label class="col-md-4 control-label">Narration:</label>
                        <div class="col-md-8">
                            <textarea class="form-control" id="Narration" rows="4"></textarea>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group row">
                        <label class="col-md-4 control-label ">Total Quantity:</label>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.NetTotalAmount, new { htmlAttributes = new { @class = "form-control totalQNT", @readonly = "readonly", @id = "totalQNT" } })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-md-4 control-label ">Total Discount:</label>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.TotalDiscount, new { htmlAttributes = new { @class = "form-control totalDiscount", @readonly = "readonly", @id = "totalDiscount" } })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group row">
                        <label class="col-md-4 control-label ">Total Amount:</label>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.NetTotalAmount, new { htmlAttributes = new { @class = "form-control total", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-md-4 control-label">Less:</label>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.LessAmount, new { htmlAttributes = new { @class = "form-control lessAmount", onChange = "invoiceAmount()" } })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-md-4 control-label">Vat Amount:</label>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.VatAmount, new { htmlAttributes = new { @class = "form-control totalVAT", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-md-4 control-label">Add:</label>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.AddAmount, new { htmlAttributes = new { @class = "form-control addAmount", onChange = "invoiceAmount()" } })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-md-4 control-label">Net Amount:</label>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.InvoicedAmount, new { htmlAttributes = new { @class = "form-control invoicedTotal", @readonly = "readonly", @id = "invoicedTotal" } })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-style-footer">
            <div class="btn-group left">
                <button type="button" class="btn btn-default ">Find</button>
                <button type="button" class="btn btn-default ">Report</button>
            </div>
            <div class="btn-group right">
                <button type="button" class="btn btn-default" id="saveOrder">Save</button>
                <button type="button" class="btn btn-default ">Close</button>
            </div>
        </div>
    </div>
}

@section Scripts
{
    <script>
        $(document).ready(function() {
            purchasebookPurchaseReturn();
        });
    </script>
}
